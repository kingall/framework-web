package cn.alldimensions.component.lucene;

import com.lighting.component.lucene.service.LuceneServiceImpl;
import org.apache.lucene.analysis.Analyzer;
import org.apache.lucene.analysis.TokenStream;
import org.apache.lucene.analysis.cn.smart.SmartChineseAnalyzer;
import org.apache.lucene.analysis.tokenattributes.CharTermAttribute;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import java.io.IOException;
import java.util.*;

@RunWith(SpringJUnit4ClassRunner.class)
//配置启动类
public class RepositoryQueryServiceTest {
    private List<String> tagsList = new LinkedList<String>();

    @Before
    public void init() throws IOException {
        //创建一个标椎分析器对象
        Analyzer analyzer = new SmartChineseAnalyzer();
        //获得tokenStream对象
        //参数一：域名    参数二：要分析的文本内容
        TokenStream tokenStream = analyzer.tokenStream("test", "在计算机系统中的意义编辑 语音\n" +
                "带宽一词最初指的是电磁波频带的宽度，也就是信号的最高频率与最低频率的差值。目前，它被更广泛地借用在数字通信中，用来描述网络或线路理论上传输数据的最高速率。这并不是它的学术定义，而是被引申地使用了 [1]  。\n" +
                "总线带宽指的是总线在单位时间内可以传输的数据总量，等于总线位宽与工作频率的乘积。例如：对于64位、800MHz的前端总线，它的数据传输率就等于64bit×800×1000×1000Hz÷8(Byte)÷1024÷1024÷1024≈6.0GB/s\n" +
                "内存带宽指的是内存总线所能提供的数据传输能力。例如：DDR400内存的数据传输频率为200MHz，那么单条模组就拥有64bit×200×2（ddr是上下沿采集信号）×1000×1000Hz÷8(Byte)÷1024÷1024÷1024≈3.0GB/s的带宽。\n" +
                "应用\n" +
                "一、表示频带宽度\n" +
                "信号的带宽是指该信号所包含的各种不同频率成分所占据的频率范围。频宽对基本输出入系统 (BIOS ) 设备尤其重要，如快速磁盘驱动器会受低频宽的总线所阻碍。\n" +
                "二、表示通信线路所能传送数据的能力\n" +
                "带宽\n" +
                "带宽\n" +
                "在单位时间内从网络中的某一点到另一点所能通过的“最高数据率”。对于带宽的概念，比较形象的一个比喻是高速公路。单位时间内能够在线路上传送的数据量，常用的单位是bps(bit per second)。计算机网络的带宽是指网络可通过的最高数据率，即每秒多少比特。\n" +
                "严格来说，数字网络的带宽应使用波特率来表示（baud），表示每秒的脉冲数。而比特是信息单位，由于数字设备使用二进制，则每位电平所承载的信息量是以2为底2的对数，如果是四进制，则是以2为底的4的对数，每位电平所承载的信息量为2。因此，在数值上，波特与比特是相同的。由于人们对这两个概念分的并不是很清楚，因此常使用比特率来表示速率，也正是用比特的人太多，所以比特率也就成了一个带宽事实的标准叫法了。\n" +
                "bit/s=1Kbit/s\n" +
                "bit/s=1Mbit/s\n" +
                "bit/s=1Gbit/s\n" +
                "描述带宽时常常把“比特/秒”省略。例如，带宽是1M，实际上是1Mbps，这里的Mbps是指兆位/s。\n" +
                "在网络中有两种不同的速率：\n" +
                "1、信号（即电磁波）在传输媒体上的传播速率（米/秒，或公里/秒）。\n" +
                "2、计算机向网络发送比特的速率（比特/秒）。\n" +
                "这两种速率的意义和单位完全不同。\n" +
                "在理解带宽这个概念之前，我们首先来看一个公式：带宽=时钟频率x总线位数/8（单位B/s），从公式中我们可以看到，带宽和时钟频率、总线位数是有着非常密切的关系的。其实在一个计算机系统中，不仅显示器、内存有带宽的概念，在一块板卡上，带宽的概念就更多了，完全可以说是带宽无处不在。\n" +
                "那到底什么是带宽呢？带宽的意义又是什么？为了更形象地理解带宽、位宽、时钟频率的关系，我们举个比较形象的例子，工人加工零件，如果一个人干，在大家单个加工速度相同的情况下，肯定不如两个人干的多，带宽就像是工人能够加工零件的总数量，位宽仿佛工人数量，时钟工作频率相当于加工单个零件的速度，位宽越宽，时钟频率越高则总线带宽越大,其好处也是显而易见的。\n" +
                "带宽\n" +
                "带宽\n" +
                "主板上通常会有两块比较大的芯片，一般将靠近CPU的那块称为北桥，远离CPU的称为南桥。北桥的作用是在CPU与内存、显卡之间建立通信接口，它们与北桥连接的带宽大小很大程度上决定着内存与显卡效能的大小。南桥是负责计算机的I/O设备、PCI设备和硬盘，对带宽的要求，相比较北桥而言，是要小一些的。而南北桥之间的连接带宽一般就称为南北桥带宽。随着计算机越来越向多媒体方向发展，南桥的功能也日益强大，对于南北桥间的连接总线带宽也是提出了新的要求，在INTEL的9X5系列主板上，南北桥的带宽将从以前一直为人所诟病的266MB/S发展到空前的2GB/S，一举解决了南北桥间的带宽瓶颈。\n" +
                "显卡中的带宽\n" +
                "带宽\n" +
                "带宽\n" +
                "玩游戏的朋友都知道，当玩一些大制作游戏的时候，画面有时候会卡的比较厉害。其实这就是显卡带宽不足的问题，再具体点说，这是显存带宽不足。众所周知，当道的AGP接口是AGP 8X，而AGP总线的频率是PCI总线的两倍，也就是266MHz,很容易就可以换算出它的带宽是2.1Gbps，这样的带宽就显得很微不足道了，因为连最普通的ATI R9000的显存带宽都要达到400MHz*128Bit/8=6.4GB/s,其余的高端显卡更是不用说了。正因为如此，INTEL在最新的9X5芯片组中，采用了PCI-Express总线来替代老态龙钟的AGP总线，与传统PCI以及更早期的计算机总线的共享并行架构相比，PCI Express最大的特点是在设备间采用点对点串行连接,如此一来即允许每个设备都有自己的专用连接，不需要向整个总线请求带宽，同时利用串行的连接特点将能轻松将数据传输速度提到一个很高的频率。在传输速度上，由于PCI Express支持双向传输模式，因此连接的每个装置都可以使用最大带宽。AGP所遇到的带宽瓶颈也迎刃而解。\n" +
                "总线中的带宽\n" +
                "在计算机系统中，总线的作用就好比是人体中的神经系统，它承担的是所有数据传输的职责，而各个子系统间都必须籍由总线才能通讯，例如，CPU和北桥间有前端总线、北桥与显卡间为AGP总线、芯片组间有南北桥总线，各类扩展设备通过PCI、PCI-X总线与系统连接；主机与外部设备的连接也是通过总线进行，流行的USB2.0、IEEE1394总线等等，一句话，在一部计算机系统内，所有数据交换的需求都必须通过总线来实现！\n" +
                "按照工作模式不同，总线可分为两种类型，一种是并行总线，它在同一时刻可以传输多位数据，好比是一条允许多辆车并排开的宽敞道路，而且它还有双向单向之分；另一种为串行总线，它在同一时刻只能传输一个数据，好比只容许一辆车行走的狭窄道路，数据必须一个接一个传输、看起来仿佛一个长长的数据串，故称为“串行”。\n" +
                "带宽\n" +
                "带宽\n" +
                "对串行总线来说，带宽和工作频率的概念与并行总线完全相同，只是它改变了传统意义上的总线位宽的概念。在频率相同的情况下，并行总线比串行总线快得多，但它存在并行传输信号间的干扰现象，频率越高、位宽越大，干扰就越严重，因此要大幅提高现有并行总线的带宽是非常困难的；而串行总线不存在这个问题，总线频率可以大幅向上提升，这样串行总线就可以凭借高频率的优势获得高带宽。而为了弥补一次只能传送一位数据的不足，串行总线常常采用多条管线（或通道）的做法实现更高的速度——管线之间各自独立，多条管线组成一条总线系统，从表面看来它和并行总线很类似，但在内部它是以串行原理运作的。对这类总线，带宽的计算公式就等于“总线频率×管线数”，这方面的例子有PCIExpress和HyperTransport，前者有×1、×2、×4、×8、×16和×32多个版本，在第一代PCIExpress技术当中，单通道的单向信号频率可达2.5GHz，我们以×16举例，这里的16就代表16对双向总线，一共64条线路，每4条线路组成一个通道，二条接收，二条发送。这样我们可以换算出其总线的带宽为2.5GHz×16/10=4GB/s（单向）。除10是因为每字节采用10位编码。\n" +
                "并行总线和串行总线的描述参数存在一定差别。对并行总线来说，描述的性能参数有以下三个：总线宽度、时钟频率、数据传输频率。其中，总线宽度就是该总线可同时传输数据的位数，好比是车道容许并排行走的车辆的数量；例如，16位总线在同一时刻传输的数据为16位，也就是2个字节；而32位总线可同时传输4个字节，64位总线可以同时传输8个字节......显然，总线的宽度越大，它在同一时刻就能够传输更多的数据。不过总线的位宽无法无限制增加。\n" +
                "总线的带宽指的是这条总线在单位时间内可以传输的数据总量，它等于总线位宽与工作频率的乘积。例如，对于64位、800MHz的前端总线，它的数据传输率就等于64bit×800MHz÷8(Byte)=6.4GB/s；32位、33MHzPCI总线的数据传输率就是32bit×33MHz÷8=133MB/s，等等，这项法则可以用于所有并行总线上面——看到这里，读者应该明白我们所说的总线带宽指的就是它的数据传输率，其实“总线带宽”的概念同“电路带宽”的原始概念已经风马牛不相及。\n" +
                "内存中的带宽\n" +
                "带宽\n" +
                "带宽\n" +
                "除总线之外，内存也存在类似的带宽概念。其实所谓的内存带宽，指的也就是内存总线所能提供的数据传输能力，但它决定于内存芯片和内存模组而非纯粹的总线设计，加上地位重要，往往作为单独的对象讨论。\n" +
                "SDRAM、DDR和DDRⅡ的总线位宽为64位，RDRAM的位宽为16位。而这两者在结构上有很大区别：SDRAM、DDR和DDRⅡ的64位总线必须由多枚芯片共同实现，计算方法如下：内存模组位宽=内存芯片位宽×单面芯片数量（假定为单面单物理BANK）；如果内存芯片的位宽为8位，那么模组中必须、也只能有8颗芯片，多一枚、少一枚都是不允许的；如果芯片的位宽为4位，模组就必须有16颗芯片才行，显然，为实现更高的模组容量，采用低位宽的芯片是一个好办法。而对RDRAM来说就不是如此，它的内存总线为串联架构，总线位宽就等于内存芯片的位宽。\n" +
                "和并行总线一样，内存的带宽等于位宽与数据传输频率的乘积，例如，DDR400内存的数据传输频率为400MHz，那么单条模组就拥有64bit×400MHz÷8(Byte)=3.2GB/s的带宽；PC800标准RDRAM的频率达到800MHz，单条模组带宽为16bit×800MHz÷8=1.6GB/s。为了实现更高的带宽，在内存控制器中使用双通道技术是一个理想的办法，所谓双通道就是让两组内存并行运作，内存的总位宽提高一倍，带宽也随之提高了一倍！带宽可以说是内存性能最主要的标志，业界也以内存带宽作为主要的分类标准，但它并非决定性能的唯一要素，在实际应用，内存延迟的影响并不亚于带宽。如果延迟时间太长的话相当不利，此时即便带宽再高也无济于事。\n" +
                "带宽匹配的问题\n" +
                "计算机系统中存在形形色色的总线，这不可避免带来总线速度匹配问题，其中最常出问题的地方在于前端总线和内存、南北桥总线和PCI总线。\n" +
                "前端总线与内存匹配与否对整套系统影响最大，最理想的情况是前端总线带宽与内存带宽相等，而且内存延迟要尽可能低。在Pentium4刚推出的时候，Intel采用RDRAM内存以达到同前端总线匹配，但RDRAM成本昂贵，严重影响推广工作，Intel曾推出搭配PC133SDRAM的845芯片组，但SDRAM仅能提供1.06GB/s的带宽，仅相当于400MHz前端总线带宽的1/3，严重不匹配导致系统性能大幅度下降；后来，Intel推出支持DDR266的845D才勉强好转，但仍未实现与前端总线匹配；接着，Intel将P4前端总线提升到533MHz、带宽增长至5.4GB/s，虽然配套芯片组可支持DDR333内存，可也仅能满足1/2而已；P4的前端总线提升到800MHz，而配套的865/875P芯片组可支持双通道DDR400——这个时候才实现匹配的理想状态，当然，这个时候继续提高内存带宽意义就不是特别大，因为它超出了前端总线的接收能力。\n" +
                "南北桥总线带宽曾是一个尖锐的问题，早期的芯片组都是通过PCI总线来连接南北桥，而它所能提供的带宽仅仅只有133MB/s，若南桥连接两个ATA-100硬盘、100M网络、IEEE1394接口......区区133MB/s带宽势必形成严重的瓶颈，为此，各芯片组厂商都发展出不同的南北桥总线方案，如Intel的Hub-Link、VIA的V-Link、SiS的MuTIOL，还有AMD的HyperTransport等等，它们的带宽都大大超过了133MB/s，最高纪录已超过1GB/s，瓶颈效应已不复存在。\n" +
                "PCI总线带宽不足还是比较大的矛盾，PC上使用的PCI总线均为32位、33MHz类型，带宽133MB/s，而这区区133MB/s必须满足网络、硬盘控制卡（如果有的话）之类的扩展需要，一旦使用千兆网络，瓶颈马上出现，业界打算自2004年开始以PCIExpress总线来全面取代PCI总线，届时PCI带宽不足的问题将成为历史。\n" +
                "带宽在数字信号系统中的意义编辑 语音\n" +
                "数字信号系统中，带宽用来标识通讯线路所能传送数据的能力，即在单位时间内通过网络中某一点的最高数据率，常用的单位为bps（又称为比特率---bit per second，每秒多少比特）。在日常生活中中描述带宽时常常把bps省略掉，例如：带宽为4M，完整的称谓应为4Mbps。\n" +
                "针对于带宽成本降低，用户接入速率也是越来越高，从最初的拨号上网，到20M甚至100M光纤。\n" +
                "但是随着计算机的发展，用户对‘带宽’的认识也应该有更大的提高。\n" +
                "一般来说，带宽是以 bit（比特）表示，而电信，联通，移动等运营商在推广的时候往往忽略了这个单位。\n" +
                "正常换算情况如下：\n" +
                "1Mbit=128KB\n" +
                "2Mbit=256KB\n" +
                "（以此类推）\n" +
                "而换算后的速度才是您真实上网的速度\n" +
                "也就是说，如果你从你的运营商开通的带宽是10M，那么代入计算公式，以上面换算的1M来计量\n" +
                "则为：\n" +
                "（1M=1024K）\n" +
                "1M/128K=1024/128=8\n" +
                "10/8=1.25M\n" +
                "也就是说你如果开通10M带宽，可以达到最高1.25M的速度\n" +
                "一般来说，一台计算机观看电影，玩游戏等，4M带宽足够。但是如果你需要经常下载大文件，建议还是使用更高带宽\n" +
                "在模拟信号系统中的意义编辑 语音\n" +
                "在模拟信号系统中，带宽用来标识传输信号所占有的频率宽度，这个宽度由传输信号的最高频率和最低频率决定，两者之差就是带宽值，因此又被称为信号带宽或者载频带宽，单位为Hz。\n" +
                "带宽其实就是信号所占用的频谱的度量，可以看做是一种与空间相关的量。与之相比，信号的传输速率就是一种与空间和时间都相关的物理量，定义为单位时间内在信道上传输的数据量。\n" +
                "为了合理使用频谱资源，国际电信联盟（ITU）为每种通信系统都规定了频率范围，这种频率范围又称为频段，而频段的频谱宽度又被称之为工作带宽。例如GSM的工作带宽为25 MHz，WCDMA和CDMA均为30 MHz。\n" +
                "带宽在人力资源领域中的意义编辑 语音\n" +
                "所谓“带宽”就是指各等级薪资的最大值与最小值之差，又将其成为薪值的分布区间。一般而言，由于职位高低不同，职位或职层所涉及技能与职责的复杂性程度也会有所不同，因此，各职等级的薪资带宽也就应该有所不同（薪资带宽应当能反应一个职位或职层的任职者由一个初入者到能力与业绩十分突出者所需要的难度大小）。如果职位或职层所涉及的技能与职责能在较短时间内得以掌握，则此等级薪资的带宽较窄；而如果职位或职层所涉及的技能和职责需要学习的时间较长，继续提升的机会也较小，则其相应的带宽较大。根据这个理论，变革者在设计职等带宽时应当坚持的原则是：职等越高，其带宽就应越大，因为职等越高，任职者胜任的速度就越慢。\n" +
                "带宽在显示器系统中的意义编辑 语音\n" +
                "在采用正弦输入研究传感器频率动态特性时，常用频率特性和相频特性来描述传感器的动态特性，其重要指标是频带宽度，简称带宽。\n" +
                "带宽（Bandwidth）是显示器视频放大器通频宽度的简称，指的是电子枪在一秒钟内扫描过像素（Pixel）的总个数，即单位时间内所有行（水平方向）扫描线和场（竖直方向）扫描线上显示出的像素个数之总和，单位是MHz。\n" +
                "带宽的详细计算公式： B=r(x) ×r(y) ×V\n" +
                "B表示显示器的带宽\n" +
                "r(x)表示每条水平扫描线上的图素个数\n" +
                "r(y)表示每帧画面的水平扫描线数\n" +
                "V 表示每秒画面刷新率\n" +
                "带宽其实就是单位时间内传输的数据的多少");
        //添加一个引用，可以获得每个关键词
        CharTermAttribute charTermAttribute = tokenStream.addAttribute(CharTermAttribute.class);
        //将指针调整到列表的头部
        tokenStream.reset();
        //遍历关键词列表，通过incrementToken方法判断列表是否结束
        while (tokenStream.incrementToken()) {
            tagsList.add(charTermAttribute.toString());
        }
        //关闭资源
        tokenStream.close();
    }

    @Test
    public void testSreachByTags() throws IOException {
        Random random = new Random();
        List<String> tags = new ArrayList<String>();
        for (int tagi = 0; tagi < 5; tagi++) {
            tags.add(tagsList.get(random.nextInt(tagsList.size())));
        }
        LuceneServiceImpl luceneServiceImpl = new LuceneServiceImpl();
        luceneServiceImpl.sreachByTags(tags);
    }

    public void genTagsList() throws IOException {

    }

    public void testWriteTags() throws IOException {
        LuceneServiceImpl luceneServiceImpl = new LuceneServiceImpl();
        Random random = new Random();
        for (int i = 0; i < 1000000; i++) {
            String tags = "";
            for (int tagi = 0; tagi < 10; tagi++) {
                tags = tags + ("".equals(tags) ? tagsList.get(random.nextInt(tagsList.size())) : "," + tagsList.get(random.nextInt(tagsList.size())));
            }
            luceneServiceImpl.createTagsIndex(UUID.randomUUID().toString(), tags);

            if(i>0 && i%10000==0){
                luceneServiceImpl.commit();
                System.out.println("=======已写入======="+i);
            }
        }

    }

}
